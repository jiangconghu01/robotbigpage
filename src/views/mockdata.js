import { getColorArr } from '../util/comFunction'
const runTer = `无
无
无
无
无
无
无
无
无
无
无
无
无
无
江苏
无
无
无
无
广东
无
无
无
无
无
无
无
陕西
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
河南
无
无
无
无
无
无
无
无
无
无
安徽
无
无
无
无
无
无
无
无
重庆
无
西藏
无
无
无
无
无
无
无
无
贵州
无
无
无
无
无
无
无
无
无
海南
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无`
const runFlow = `无
无
无
无
无
无
无
无
无
无
无
无
无
无
月末关账检查流程（测试中）
无
无
无
无
应交增值税结转计提流程（测试中）
无
无
无
无
无
无
无
纳税申报流程（测试中）
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
现金流量表编制（测试中）
无
无
无
无
无
无
无
无
无
无
支付失败清单整理流程
无
无
无
无
无
无
无
无
资产转资确认流程
无
关联交易报表（租赁部分_测试中）
无
无
无
无
无
无
无
无
支付失败清单整理流程
无
无
无
无
无
无
无
无
无
租赁类资产稽核编制流程
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无
无`
const statustxt = `free
free
free
free
free
free
free
free
free
free
free
free
free
free
run
free
free
free
free
exc
free
free
free
free
free
free
free
run
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
run
free
free
free
free
free
free
free
free
free
free
run
free
free
free
free
free
free
free
free
exc
free
exc
free
free
free
free
free
free
free
free
exc
free
free
free
free
free
free
free
free
free
run
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free
free


free
free
free
free
free
free
free
free`
const companylist = `信息技术公司
研究院
信息港中心
信安中心
采购共享中心
移动学院
设计院
财务公司
物联网公司
苏州研发中心
杭州研发中心
在线服务公司
咪咕公司
互联网公司
投资公司
成都产业研究院
上海产业研究院
电商公司
集成公司
销售分公司
总部
政企事业部`
const runpart = `信息技术公司
研究院
信息港中心
信安中心
采购共享中心
移动学院`
const flowList = `支付失败清单整理
资产转资确认流程
竣工决算辅助审核流程
租赁类资产稽核表编制流程
现金流量表编制流程
月末关账检查流程
开账关账管理流程
应交增值税结转计提流程
纳税申报流程
关联交易表填报流程`
//监控页面终端实时运行状态表格

const data1 = runTer.split(/\n/)
const data2 = runFlow.split(/\n/)
const statusArr = ['free', 'run', 'exc']
const statust = statustxt.split(/\n/)
const monitorRunTerData = data1.map((val, index) => {
  const i = index + 22
  //   let status = statusArr[~~(Math.random() * 2)]
  //   ;(val === '贵州' || val === '宁夏' || val === '咪咕公司') && (status = 'exc')
  //   val === '西藏' || (val === '黑龙江' && (status = 'free'))
  return { termicode: 'rap' + (index + 1), ip: '192.168.0.' + i, flow: data2[index], depart: val, status: statust[index] }
})
//监控页面地图下label
const colors = ['#E74335', '#E56B09', '#F1C54F', '#03D9D1', '#1D7FC3']
const data3 = companylist.split(/\n/)
const companyList_d = [42.87, 6.86, 1.15, 0.0, 0.0, 7.45]
const c_1 = getColorArr(companyList_d)
const runPartList = runpart.split(/\n/)
const companyList = data3.map((val, index) => {
  const i = runPartList.findIndex((ele) => ele === val)
  const isrun = i > -1
  return { name: val, value: companyList_d[i], unit: '小时', color: isrun ? c_1[i] : '#1D7FC3', label: '终端运行时长:', isrun: isrun, delay: Math.random() * 1.3 }
})
const companyListBus_d = [139, 42, 16, 12, 0, 82]
const c_2 = getColorArr(companyListBus_d)
const companyListBus = data3.map((val, index) => {
  const i = runPartList.findIndex((ele) => ele === val)
  const isrun = i > -1
  return { name: val, value: companyListBus_d[i], unit: '笔', color: isrun ? c_2[i] : '#1D7FC3', label: '作业总量：', isrun: isrun, delay: Math.random() * 1.3 }
})
//业务价值最后的列表
const ywlast1 = `租赁类资产稽核编制流程
资产转资确认流程
支付失败清单整理流程
支付失败清单整理流程
关联交易报表（租赁部分_测试中）
现金流量表编制（测试中）
月末关账检查流程（测试中）
应交增值税结转计提流程（测试中）
纳税申报流程（测试中）`
const ywlast2 = `海南
重庆
安徽
贵州
西藏
河南
江苏
广东
陕西`
const ywlast3 = `exe
exc
exe
exc
exc
exe
exe
exc
exe`
const flows = ywlast1.split(/\n/)
const data4 = ywlast2.split(/\n/)
const statuslist = ['lineup', 'exe', 'exc']
const sts = ywlast3.split(/\n/)

const busLastList = data4.map((val, index) => {
  //   let status2 = statuslist[~~(Math.random() * 2)]
  //   ;(val === '贵州' || val === '宁夏' || val === '咪咕公司') && (status2 = 'exc')
  return { index: index + 1, unitname: val, workflow: flows[index], status: sts[index] }
})
export { monitorRunTerData, companyList, companyListBus, busLastList }
